% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anglr-points.R, R/anglr-raster.R,
%   R/anglr-trip.R, R/anglr-vector-classes.R, R/anglr.R, R/rgl.r
\name{anglr.SpatialMultiPoints}
\alias{anglr.SpatialMultiPoints}
\alias{anglr.SpatialPoints}
\alias{anglr}
\alias{anglr.BasicRaster}
\alias{anglr}
\alias{anglr.trip}
\alias{anglr}
\alias{anglr.default}
\alias{anglr}
\alias{anglr.mesh3d}
\title{Raster anglr}
\usage{
\method{anglr}{SpatialMultiPoints}(x, z = NULL, ..., type = NULL,
  max_area = NULL)

\method{anglr}{SpatialPoints}(x, z = NULL, ..., type = NULL,
  max_area = NULL)

\method{anglr}{BasicRaster}(x, z = NULL, ..., na.rm = TRUE, type = NULL,
  max_area = NULL)

\method{anglr}{trip}(x, z = NULL, ..., type = NULL, max_area = NULL)

\method{anglr}{default}(x, z = NULL, ..., type = NULL, max_area = NULL)

anglr(x, ...)

\method{anglr}{mesh3d}(x, z = NULL, ..., type = NULL, max_area = NULL)
}
\arguments{
\item{x}{input data}

\item{z}{\code{\link[raster]{raster}}, by default \code{x} is used}

\item{...}{arguments passed to methods}

\item{type}{type of topology to create (LINE or POLYGON)}

\item{max_area}{maximum area in coordinate system of x, passed to \code{\link[RTriangle]{triangulate}} 'a' argument}

\item{na.rm}{remove missing values}
}
\value{
quad_mesh

a list of tibble data frames, using the gris-map_table model
}
\description{
Colours not supported, this just gives the viridis palette sequentially.

Create primitive-based "mesh" structures from various inputs.
}
\details{
#' Methods exist for SpatialPolygons, SpatialLines, rgl mesh3d(triangle) ...
}
\section{Warning}{

anglr only checks for presence of triangle centres within
known holes, so this doesn't pick up examples of overlapping areas e.g. 
https://github.com/hypertidy/anglr/issues/39
}

\examples{
library(raster)
w <- raster(volcano)
plot(anglr(w/300))

## -----------------------------------------------
## POLYGONS
library(maptools)
data(wrld_simpl)
b <- anglr(wrld_simpl)
plot(b)
#if (require(rworldxtra)) {

#data(countriesHigh)
#sv <- c("New Zealand", "Antarctica", "Papua New Guinea",
#  "Indonesia", "Malaysia", "Fiji", "Australia")
#a <- subset(countriesHigh, SOVEREIGNT \%in\% sv)
#b7 <- anglr(a, max_area = 0.5)
#plot(globe(b7))
#}
## -----------------------------------------------
## LINES
#l1 <- anglr(as(a, "SpatialLinesDataFrame") )
#plot(l1)
#plot(globe(l1))

#data("flight_tracks", package = "silicate")
#r <- anglr(flight_tracks)
#plot(r)
#rgl::aspect3d(1, 1, 0.001)
#rgl::rglwidget()

## copy feature attributes onto vertices
#library(sf)
#example(st_read)
#library(rgl)
#rgl.clear(); plot(anglr(st_cast(nc, "MULTILINESTRING"), z = "BIR74"));

#x <- nc
## copy raster attributes onto vertices (must be same projection for now)
#topo <- raster(system.file("extdata", "gebco1.tif", package = "ang
#rgl.clear(); plot(anglr(x, z = topo/10));
#data("wrld_simpl", package= "maptools")
# rgl.clear(); plot(globe(anglr(st_as_sf(wrld_simpl[c(9, 160), ]), z = topo*1e4, max_area = .1)));

## we can nominate the output type so we aren't bound to what's come in
#rgl.clear(); plot(anglr(st_cast(x, "MULTILINESTRING"), z = topo/1000, type = "POLYGON"));
#rgl.clear(); plot(anglr(x, z = topo/1000, type = "LINE"));
## -----------------------------------------------
## RGL TRIANGLES
library(rgl)

dod <- anglr(dodecahedron3d(col = "cyan"))
octo <- anglr(translate3d(octahedron3d(col = "blue"), 6, 0, 0))
plot(dod, col = viridis::viridis(5)[1], alpha = 0.3)
plot(octo, col = viridis::viridis(5)[5], alpha = 0.3)
bg3d("grey")
}
